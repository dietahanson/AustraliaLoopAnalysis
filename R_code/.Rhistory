pve.oli<-rep(.35, 2)
barplot(pve.oli, ylim=c(0,1), ylab="PVE",
xlab="QTL Index",names.arg = 1:length(pve.oli),
main="Oligogenic Model \n(few large effects)",
cex.names=0.5, axis.lty=1)
hist(pve.oli, xlim=c(0,1), xlab="PVE", main="Histogram of Oligogenic Model")
#c) the geometric model (exponential distribution)
pve.geo<-(rexp(10))/10
barplot(sort(pve.geo, decreasing=T), ylim=c(0,1), ylab="PVE",
xlab="QTL Index",names.arg = 1:length(pve.geo),
main="Geometric Model \n(few large, many small effects)",
cex.names=0.5, axis.lty=1)
hist(pve.geo, xlim=c(0,.2), xlab="PVE", main="Histogram of Geometric Model", freq=T, breaks=20)
####Now, going to show that histogram of many distributions added together does not represent the actual distributions
#a) Uniform distributions
##first make a bunch of distributions from the infintesimal modeal (many small)
pve.size.inf<-seq(0.01, 0.46, by=0.01) #make a vector of possible pve sizes
pve.count.inf<-10:20 #make a vector of possible pve counts
uni.list.inf<-list() #make an empty list into which the distributions can go
for (i in pve.count.inf) {
for (k in pve.size.inf) {
#pves.inf<-rep(k, i)
pves.inf<-rep(runif(1, 0.01, 0.15), i)
uni.list.inf[[paste(k,i,sep="by")]]<-pves.inf
}
}
all.data.inf<-Reduce(c, uni.list.inf)
##then make a bunch of distributions from the oligogenic modeal (few large)
pve.size.oli<-seq(0.1, 1.8, by=0.01) #make a vector of possible pve sizes
pve.count.oli<-1:3 #make a vector of possible pve counts
uni.list.oli<-list() #make an empty list into which the distributions can go
for (i in pve.count.oli) {
for (k in pve.size.oli) {
pves.oli<-rep(runif(1, 0.15, 0.41), i)
uni.list.oli[[paste(k,i,sep="by")]]<-pves.oli
}
}
all.data.oli<-Reduce(c, uni.list.oli)
#b) Exponential distributions
uni.list.exp<-list() #make an empty list into which the distributions can go
for (i in 1:500) {
pves.geo<-(rexp(10))/10
uni.list.exp[[paste(i)]]<-pves.geo
}
all.data.exp<-Reduce(c, uni.list.exp)
hist(c(all.data.inf, all.data.oli))
hist(all.data.inf)
pve.size.inf<-seq(0.01, 0.46, by=0.01) #make a vector of possible pve sizes
pve.count.inf<-10:20 #make a vector of possible pve counts
uni.list.inf<-list() #make an empty list into which the distributions can go
for (i in pve.count.inf) {
for (k in pve.size.inf) {
#pves.inf<-rep(k, i)
#pves.inf<-rep(runif(1, 0.01, 0.15), i)
pves.inf<-rep(runif(1, 0.01, 0.15), runif(1, 9, 21))
uni.list.inf[[paste(k,i,sep="by")]]<-pves.inf
}
}
all.data.inf<-Reduce(c, uni.list.inf)
hist(all.data.inf)
dbeta(n=1000, shape1 = 1, shape2 = 4)
rbeta(n=1000, shape1 = 1, shape2 = 4)
hist(rbeta(n=1000, shape1 = 1, shape2 = 4))
head(x)
source('~/Documents/Australia/R_code/loop_model_raymond.R')
setwd("~/Documents/Australia/R_code")
source('~/Documents/Australia/R_code/loop_model_raymond.R')
dddd
op <- par(no.readonly=TRUE)
dddd
source('~/Documents/Societies/plots/frenchpolyplotting/taxa_societies_munging_v12.r')
setwd("~/Documents/Societies/plots/frenchpolyplotting")
source('~/Documents/Societies/plots/frenchpolyplotting/taxa_societies_munging_v12.r')
dddd
source('~/Documents/Australia/R_code/loop_model_raymond.R')
rsummary_h
stable_count_h
1998+2291
cat("Number of valid and stable models:", stable_count_h, "Number of models tried:", max_nwrand)
dev.new()
dddd <- gsub("-", "", as.character(Sys.Date()))
pdf(paste("australia_loop_outcome",dddd,".pdf", sep=''),  width=11, height=8.5)
par(mfrow=c(2,1),fig=c(0.02,0.98,0.2,0.8))
barplot(rsummary_h/stable_count_h,cex.names=0.7,las=2,legend=T,xpd=T,args.legend=list(horiz=T,y=1.25),ylab="Proportion")
title("Human suppression",line=3)
cat("Number of valid and stable models:", stable_count_h, "Number of models tried:", max_nwrand)
dev.off()
dev.new()
dddd <- gsub("-", "", as.character(Sys.Date()))
pdf(paste("australia_loop_outcome",dddd,".pdf", sep=''),  width=11, height=8.5)
par(mfrow=c(2,1),fig=c(0.02,0.98,0.2,0.8))
barplot(rsummary_h/stable_count_h,cex.names=0.7,las=2,legend=T,xpd=T,args.legend=list(horiz=T,y=1.25),ylab="Proportion")
title("Human suppression",line=3)
paste(cat("Number of valid and stable models:", stable_count_h, "Number of models tried:", max_nwrand))
dev.off()
hotnet<- read.csv("hotgrouped.csv", stringsAsFactors = F)
head(hotnet)
nwfile <- data.frame(hotnet$From, hotnet$To)
nwfile$hotnet.prey <- gsub(" ", "_", nwfile$hotnet.prey, fixed = TRUE)
nwfile$hotnet.predator <- gsub(" ", "_", nwfile$hotnet.predator, fixed = TRUE)
head(nwfile)
nwfile <- data.frame(hotnet$To, hotnet$From)
nnodes <- length(unique(union(nwfile$hotnet.From,
nwfile$hotnet.To)))
head(nwfile)
cat(nnodes,"\n", file="martu.nw1")
write.table(nwfile,
file = "martu.nw1",
sep = "\t",
quote = F,
row.names = F,
col.names = F,
append = T)
stefgroup <- read.csv("stefgroups.csv",  # get stefanis groups
header = T,
stringsAsFactors = F)
tg <- read.delim("tg_martu.txt",  # get trophic groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
tg$Species <- gsub("_", " ", tg$Species)   # fix species names
tg$Species <- gsub("human", "Homo sapiens", tg$Species)
tg$Species <- gsub("\\*", "", tg$Species)
aic <- read.delim("aic_martu.txt",  # get aic groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
aic$Species <- gsub("_", " ", aic$Species)  # fix species names
aic$Species <- gsub("human", "Homo sapiens", aic$Species)
aic$Species <- gsub("\\*", "", aic$Species)
groups <- data.frame(common = stefgroup$common,  # make table of species names
latin = stefgroup$latin,
stefgroup = stefgroup$stefgroup)
groups$tg <- tg$X.TroG[match(groups$latin, tg$Species)]  # add trophic groups
groups$aic <- aic$X.AicG[match(groups$latin, aic$Species)]  # add aic groups
groups[is.na(groups$tg),]  # returns species with no group match in tg
groups[is.na(groups$aic),]  # returns species with no group match in aic
groups
?write.csv
write.csv(groups, file = "compare_groups.csv")
hotnet<- read.csv("hotnet.csv", stringsAsFactors = F)
nwfile <- data.frame(hotnet$To, hotnet$From)
nwfile
hotney
hotnet
head(hotnet)
hotnet<- read.csv("hotnet.csv", stringsAsFactors = F)
nwfile <- data.frame(hotnet$prey, hotnet$predator)
nwfile$hotnet.prey <- gsub(" ", "_", nwfile$hotnet.prey, fixed = TRUE)
nwfile$hotnet.predator <- gsub(" ", "_", nwfile$hotnet.predator, fixed = TRUE)
nnodes <- length(unique(union(nwfile$hotnet.predator,
nwfile$hotnet.prey)))
head(nwfile)
cat(nnodes,"\n", file="martu.nw1")
write.table(nwfile,
file = "martu.nw1",
sep = "\t",
quote = F,
row.names = F,
col.names = F,
append = T)
agg <- read.csv("agg_martu.csv",  #get aggreagted groups from n_w
header = T,
stringsAsFactors = F)
head(agg)
agg <- read.csv("agg_martu.csv",  #get aggreagted groups from n_w
header = T,
stringsAsFactors = F)
head(aic)
aic <- read.delim("aic_martu.txt",  # get aic groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
aic$Species <- gsub("_", " ", aic$Species)  # fix species names
aic$Species <- gsub("human", "Homo sapiens", aic$Species)
aic$Species <- gsub("\\*", "", aic$Species)
head(aic)
head(agg)
?cSplit
library(splitstackshape)
?cSplit
library(reshape2)
agg <- melt(agg, id.vars = "group")
head(agg)
agg[agg$group=="6",]
?melt
agg <- melt(agg,
id.vars = "group",
na.rm = T)
agg[agg$group=="6",]
agg <- melt(agg,
id.vars = "group")
agg[agg$group=="6",]
agg <- melt(agg, id.vars = "group")
agg <- read.csv("agg_martu.csv",  #get aggregated groups from n_w
header = T,
stringsAsFactors = F)
agg <- melt(agg, id.vars = "group", na.rm = T)
agg[agg$group=="6",]
?read.csv
agg <- read.delim("agg_martu.txt",
header = F,
stringsAsFactors = F,
sep = "\t")
head(agg)
agg <- read.delim("agg_martu.txt",
header = T,
stringsAsFactors = F,
sep = "\t")
head(agg)
.
aic <- read.delim("aic_martu.txt",  # get aic groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
head(aic)
agg <- read.delim("aggr_martu.txt",
header = T,
stringsAsFactors = F,
sep = "\t")
head(agg)
head(aic)
head(agg)
agg$X.Species <- gsub("_", " ", agg$X.Species)  # fix species names
agg$X.Species <- gsub("human", "Homo sapiens", agg$X.Species)
agg$X.Species <- gsub("\\*", "", agg$X.Species)
head(agg)
agglong <- cSplit(agg, "X.Species", ".", direction = "long")
agglong <- cSplit(agg$X.Species, "X.Species", ".", direction = "long")
agg$X.Species
?cSplit
head(agg)
agg <- read.delim("aggr_martu.txt",  # get aggregated groups from n_w
header = T,
stringsAsFactors = T,
sep = "\t")
agg <- read.delim("agg_martu.txt",  # get aggregated groups from n_w
header = T,
stringsAsFactors = T,
sep = "\t")
agg$X.Species <- gsub("_", " ", agg$X.Species)  # fix species names
agg$X.Species <- gsub("human", "Homo sapiens", agg$X.Species)
agg$X.Species <- gsub("\\*", "", agg$X.Species)
agglong <- cSplit(agg, "X.Species", ".", direction = "long")
agglong <- cSplit(agg[4,1], "X.Species", ".", direction = "long")
agg$X.Species
agglong <- cSplit(agg, "X.Species", ".", direction = "long")
mode(agg$X.Species)
agglong <- Reshape(agg, id.vars = "X.",
var.stubs = "X.Species",
sep = ".")
head(agglong)
?reshape
agglong <- reshape(agg, direction = "long", idvar = "X.",
varying = "X.Species", sep = ".")
head(agglong)
agg <- melt(agg, id.vars = "group", na.rm = T)
agg$X.Species <- gsub("_", " ", agg$X.Species)  # fix species names
agg$X.Species <- gsub("human", "Homo sapiens", agg$X.Species)
agg$X.Species <- gsub("\\*", "", agg$X.Species)
head(agg)
agg <- data.frame(agg$X.Species = "Species",
agg$X. = "Group")
agg <- data.frame(agg$X.Species = "Species",
agg$X. = "Group")
agg <- data.frame(species = agg$X.Species,
group = agg$X.)
head(agg)
max(agg$group)
agglong <- cSplit(agg, "species", ".", direction = "long")
head(agglong)
agglong
head(agglong, 25)
agg <- read.delim("agg_martu.txt",  # get aggregated groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
agg$X.Species <- gsub("_", " ", agg$X.Species)  # fix species names
agg$X.Species <- gsub("human", "Homo sapiens", agg$X.Species)
agg$X.Species <- gsub("\\*", "", agg$X.Species)
agg$X.Species <- gsub("sp.", "sp", agg$X.Species)
agg <- data.frame(species = agg$X.Species,
group = agg$X.)
agglong <- cSplit(agg, "species", ".", direction = "long")
agglong
stefgroup <- read.csv("stefgroups.csv",  # get stefanis groups
header = T,
stringsAsFactors = F)
tg <- read.delim("tg_martu.txt",  # get trophic groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
tg$Species <- gsub("_", " ", tg$Species)   # fix species names
tg$Species <- gsub("human", "Homo sapiens", tg$Species)
tg$Species <- gsub("\\*", "", tg$Species)
aic <- read.delim("aic_martu.txt",  # get aic groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
aic$Species <- gsub("_", " ", aic$Species)  # fix species names
aic$Species <- gsub("human", "Homo sapiens", aic$Species)
aic$Species <- gsub("\\*", "", aic$Species)
agg <- read.delim("agg_martu.txt",  # get aggregated groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
agg$X.Species <- gsub("_", " ", agg$X.Species)  # fix species names
agg$X.Species <- gsub("human", "Homo sapiens", agg$X.Species)
agg$X.Species <- gsub("\\*", "", agg$X.Species)
agg$X.Species <- gsub("sp.", "sp", agg$X.Species)
agg <- data.frame(species = agg$X.Species,
group = agg$X.)
agglong <- cSplit(agg, "species", ".", direction = "long")
groups <- data.frame(common = stefgroup$common,  # make table of species names
latin = stefgroup$latin,
stefgroup = stefgroup$stefgroup)
groups$tg <- tg$X.TroG[match(groups$latin, tg$Species)]  # add trophic groups
groups$aic <- aic$X.AicG[match(groups$latin, aic$Species)]  # add aic groups
groups$agg <- agglong$group[match(groups$latin, agglong$species)] #add agg groups
groups[is.na(groups$tg),]  # returns species with no group match in tg
groups[is.na(groups$aic),]  # returns species with no group match in aic
groups[is.na(groups$agg),]  # returns species with no group match in aic
?cSplit
stefgroup <- read.csv("stefgroups.csv",  # get stefanis groups
header = T,
stringsAsFactors = F)
tg <- read.delim("tg_martu.txt",  # get trophic groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
tg$Species <- gsub("_", " ", tg$Species)   # fix species names
tg$Species <- gsub("human", "Homo sapiens", tg$Species)
tg$Species <- gsub("\\*", "", tg$Species)
aic <- read.delim("aic_martu.txt",  # get aic groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
aic$Species <- gsub("_", " ", aic$Species)  # fix species names
aic$Species <- gsub("human", "Homo sapiens", aic$Species)
aic$Species <- gsub("\\*", "", aic$Species)
agg <- read.delim("agg_martu.txt",  # get aggregated groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
agg$X.Species <- gsub("_", " ", agg$X.Species)  # fix species names
agg$X.Species <- gsub("human", "Homo sapiens", agg$X.Species)
agg$X.Species <- gsub("\\*", "", agg$X.Species)
agg$X.Species <- gsub("sp..", "sp.", agg$X.Species)
agg <- data.frame(species = agg$X.Species,
group = agg$X.)
agglong <- cSplit(agg, "species", ".", direction = "long")
groups <- data.frame(common = stefgroup$common,  # make table of species names
latin = stefgroup$latin,
stefgroup = stefgroup$stefgroup)
groups$tg <- tg$X.TroG[match(groups$latin, tg$Species)]  # add trophic groups
groups$aic <- aic$X.AicG[match(groups$latin, aic$Species)]  # add aic groups
groups$agg <- agglong$group[match(groups$latin, agglong$species)] #add agg groups
groups[is.na(groups$tg),]  # returns species with no group match in tg
groups[is.na(groups$aic),]  # returns species with no group match in aic
groups[is.na(groups$agg),]  # returns species with no group match in aic
agg
head(agg)
agg <- read.delim("agg_martu.txt",  # get aggregated groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
agg$X.Species <- gsub("_", " ", agg$X.Species)  # fix species names
agg$X.Species <- gsub("human", "Homo sapiens", agg$X.Species)
agg$X.Species <- gsub("\\*", "", agg$X.Species)
head(agg)
agg$X.Species <- gsub("sp..", "sp.", agg$X.Species)
head(agg)
agg <- read.delim("agg_martu.txt",  # get aggregated groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
agg$X.Species <- gsub("_", " ", agg$X.Species)  # fix species names
agg$X.Species <- gsub("human", "Homo sapiens", agg$X.Species)
agg$X.Species <- gsub("\\*", "", agg$X.Species)
agg$X.Species <- gsub("\\sp..", "sp.", agg$X.Species)
head(agg)
agg <- data.frame(species = agg$X.Species,
group = agg$X.)
agglong <- cSplit(agg, "species", ".", direction = "long")
groups <- data.frame(common = stefgroup$common,  # make table of species names
latin = stefgroup$latin,
stefgroup = stefgroup$stefgroup)
groups$tg <- tg$X.TroG[match(groups$latin, tg$Species)]  # add trophic groups
groups$aic <- aic$X.AicG[match(groups$latin, aic$Species)]  # add aic groups
groups$agg <- agglong$group[match(groups$latin, agglong$species)] #add agg groups
groups[is.na(groups$tg),]  # returns species with no group match in tg
groups[is.na(groups$aic),]  # returns species with no group match in aic
groups[is.na(groups$agg),]  # returns species with no group match in aic
source('~/Documents/Australia/R_code/network_work.R')
source('~/Documents/Australia/R_code/network_work.R')
agg <- data.frame(species = agg$X.Species,
group = agg$X.)
agglong <- cSplit(agg, "species", ".", direction = "long")
stefgroup <- read.csv("stefgroups.csv",  # get stefanis groups
header = T,
stringsAsFactors = F)
tg <- read.delim("tg_martu.txt",  # get trophic groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
tg$Species <- gsub("_", " ", tg$Species)   # fix species names
tg$Species <- gsub("human", "Homo sapiens", tg$Species)
tg$Species <- gsub("\\*", "", tg$Species)
aic <- read.delim("aic_martu.txt",  # get aic groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
aic$Species <- gsub("_", " ", aic$Species)  # fix species names
aic$Species <- gsub("human", "Homo sapiens", aic$Species)
aic$Species <- gsub("\\*", "", aic$Species)
agg <- read.delim("agg_martu.txt",  # get aggregated groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
agg$X.Species <- gsub("_", " ", agg$X.Species)  # fix species names
agg$X.Species <- gsub("human", "Homo sapiens", agg$X.Species)
agg$X.Species <- gsub("\\*", "", agg$X.Species)
agg$X.Species <- gsub("\\sp..", "sp.", agg$X.Species)
agg <- data.frame(species = agg$X.Species,
group = agg$X.)
agglong <- cSplit(agg, "species", ".", direction = "long")
agglong <- gsub("sp", "sp.", agglong$species)
groups <- data.frame(common = stefgroup$common,  # make table of species names
latin = stefgroup$latin,
stefgroup = stefgroup$stefgroup)
groups$tg <- tg$X.TroG[match(groups$latin, tg$Species)]  # add trophic groups
groups$aic <- aic$X.AicG[match(groups$latin, aic$Species)]  # add aic groups
groups$agg <- agglong$group[match(groups$latin, agglong$species)] #add agg groups
groups[is.na(groups$tg),]  # returns species with no group match in tg
groups[is.na(groups$aic),]  # returns species with no group match in aic
groups[is.na(groups$agg),]  # returns species with no group match in aic
groups$agg <- agglong$group[match(groups$latin, agglong$species)] #add agg groups
head(agglong)
source('~/Documents/Australia/R_code/network_work.R')
groups[is.na(groups$tg),]  # returns species with no group match in tg
groups[is.na(groups$aic),]  # returns species with no group match in aic
groups[is.na(groups$agg),]  # returns species with no group match in aic
agglong
groups
getOption("max.print")
head(agglong, 188)
head(agglong, 18)
source('~/Documents/Australia/R_code/network_work.R')
groups[is.na(groups$tg),]  # returns species with no group match in tg
groups[is.na(groups$aic),]  # returns species with no group match in aic
groups[is.na(groups$agg),]  # returns species with no group match in aic
agglong
agglong[1:188,]
source('~/Documents/Australia/R_code/network_work.R')
agglong
groups[is.na(groups$agg),]  # returns species with no group match in aic
agg <- read.delim("agg_martu.txt",  # get aggregated groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
agg$X.Species <- gsub("_", " ", agg$X.Species)  # fix species names
agg$X.Species <- gsub("human", "Homo sapiens", agg$X.Species)
agg$X.Species <- gsub("\\*", "", agg$X.Species)
agg
agg$X.Species <- gsub("\\sp..", "sp.", agg$X.Species)
agg
agg <- read.delim("agg_martu.txt",  # get aggregated groups from n_w
header = T,
stringsAsFactors = F,
sep = "\t")
agg$X.Species <- gsub("_", " ", agg$X.Species)  # fix species names
agg$X.Species <- gsub("human", "Homo sapiens", agg$X.Species)
agg$X.Species <- gsub("\\*", "", agg$X.Species)
agg$X.Species <- gsub("sp..", "sp.", agg$X.Species, fixed = T)
agg <- data.frame(species = agg$X.Species,
group = agg$X.)
agglong <- as.data.frame(cSplit(agg, "species", ".", direction = "long"))
agglong$species <- gsub("sp ", "sp.", agglong$species)
groups <- data.frame(common = stefgroup$common,  # make table of species names
latin = stefgroup$latin,
stefgroup = stefgroup$stefgroup)
groups$tg <- tg$X.TroG[match(groups$latin, tg$Species)]  # add trophic groups
groups$aic <- aic$X.AicG[match(groups$latin, aic$Species)]  # add aic groups
groups$agg <- agglong$group[match(groups$latin, agglong$species)] #add agg groups
groups[is.na(groups$tg),]  # returns species with no group match in tg
groups[is.na(groups$aic),]  # returns species with no group match in aic
groups[is.na(groups$agg),]  # returns species with no group match in aic
agg
agglong
agglong$species <- gsub("sp ", "sp.", agglong$species)
agglong
agglong <- as.data.frame(cSplit(agg, "species", ".", direction = "long"))
source('~/Documents/Australia/R_code/network_work.R')
groups[is.na(groups$tg),]  # returns species with no group match in tg
groups[is.na(groups$aic),]  # returns species with no group match in aic
groups[is.na(groups$agg),]  # returns species with no group match in aic
aic
tg
agglong
groups
agg
agglong
?cSplit
source('~/Documents/Australia/R_code/network_work.R')
groups[is.na(groups$tg),]  # returns species with no group match in tg
groups[is.na(groups$aic),]  # returns species with no group match in aic
groups[is.na(groups$agg),]  # returns species with no group match in aic
write.csv(groups, file = "compare_groups.csv")
?write.csv
write.csv(groups,
file = "compare_groups.csv",
row.names = F)
